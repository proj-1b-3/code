@startuml
skinparam defaultFontSize 16
skinparam defaultFontName IBM Plex Mono
skinparam classAttributeIconSize 0

class UserRecord {
	+ Name : String + Password : String
	+ Perms : Role
	+ Active : Bool
}

class User {
	- Id : Int32
	- Name : String
	- Token : Byte[]
	____
	+ get_Id() : Int32
	+ get_Name() : String
}

class Server {
	RegisteredUsers : Dictionary<String, UserData>
	ActiveUsers : Dictionary<Guid, UserData>
	____
	TryLogin(username, password : String, user : out User) : Boolean
	TryLogout(session_token : Guid) : Boolean
	TryRegister(username, password : String) : Boolean
	TryDeregister(session_token : Guid, password : String): Boolean
}

class Client {
	CurrentUser : User
	____
	Login()
	Logout()
	Register()
	Deregister()
}

enum Role {
	Owner
	CafeManager
	Manager
	Consumer
}

class Reservation {
	- Id : Int32
	- Owner : User
	- Room : EscapeRoom
	- Size: Int32
	- EndDate : Date
	____
	get_Id() : Int32
	____
	IsValid(): Bool
}

together {
	class Product {
		- Id : Int32
		+ Name : String
		+ Discription : String
		- Price : Int32
		____
		+ get_Id() : Int32
		+ get_Price() : Int32
		____
	}

	class Ticket {
		EscapeRoomId : Int32
		UserName : String
		EndDate : Date
	}

	class Consumable {
		+ Items : Consumable[]
	}

	Consumable -up-|> Product
	Ticket -up-|> Product
}

together {
	class ProductRegister {
		NameToId : Dictionary<String, Int32>
		ProductById : Dictionary<Int32, Product>
		____
		get_Product(Int32): Product
		____
		ProductNameToId(name : String) : Int32
		AddProduct(Product): Void
		RemoveProduct(Int32): Void
	}

	class ReservationRegister {
		ReservationById : Dictionary<Int32, Reservation>
		____
		get_Reservation(Int32): Reservation
		____
		AddReservation(Reservation): Void
		DelReservation(Int32): Void
	}
}

Server .up.> ProductRegister
Server .up.> ReservationRegister

Client .down.> User

Server -down- Client

@enduml
