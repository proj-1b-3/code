@startuml
skinparam defaultFontSize 16
skinparam defaultFontName IBM Plex Mono

class "<u>Program</u>" {
	+ Main(args: []String): void
}

"<u>Program</u>" ..> Server
"<u>Program</u>" ..> Client

class Server {
	- _DataBase: DataSet
	- ActiveUsers: Dictionary<Token, String>
	__
	+ <<constructor>> Server()
	..
	+ <<getter>> DataBase(): DataSet
	..
	+ LoadData(): void
	+ SaveData(): void
	+ TryLogin(username: String, password: String, user: out User): Boolean
	+ TryLogout(session_token: Token): Boolean
	+ TryRegister(username: String, password: String): Boolean
	+ TryDeregister(session_token: Token, password: String): Boolean
	+ TryAddRoom(session_token: Token, room: RoomData): Boolean
	+ TryRemoveRoom(session_token: Token, room: RoomData): Boolean
	+ TryPay(session_token: Token, items: Product[]): Boolean
}

Server ..> User
Server ..> Role
Server ..> RoomData
Server ..> Product

class Client {
	- CurrentUser: User
	- Connection: Server
	- _Stop: Boolean
	+ Commands: Dictionary<String, Command>
	{field} + Command: void Delegate(void)
	__
	+ <<constructor>> Client()
	..
	+ <<getter>> Stop(): Boolean
	..
	- ReadField(field_name: String): String
	+ Help()
	+ ShowStatus()
	+ ListBasketItems()
	+ RemoveBasketItem()
	+ Login()
	+ Logout()
	+ Register()
	+ Deregister()
	+ Exit()
	+ BuyTicket()
	+ AddRoom()
	+ RemoveRoom()
	+ ListRooms()
	+ Pay()
}

Client ..> User
Client -> Server
Client ..> RoomData
Client ..> Product

class Product {
	+ Id: Int32
	+ Price: Single
}

class Ticket {
	+ RoomName: String
	+ Consumables: []Consumable
}

Ticket -u-|> Product
Ticket ..> Consumable

class Consumable {
	+ ConsumableName: String
	+ Discription: String
}

Consumable -u-|> Product

class RoomData {
	+ RoomName: String
	+ Theme: String
	+ Discription: String
	+ Capacity: Int32
	+ Price: Single
}

class User {
	- _UserName: String
	- _SessionToken: Guid
	__
	+ <<constructor>> User(username: String, session_token: Guid)
	..
	+ <<getter>> UserName(): String
	+ <<getter>> SessionToken(): Guid
}

enum Role {
	Owner
	CafeManager
	Manager
	Consumer
	__
}

@enduml
